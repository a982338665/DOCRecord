-====================================================
--
内存泄露java.lang.OutOfMemoryError: PermGen space解决方法
---
	--1.PermGen space（Permanent Generation space）--是指永久的保存区域
		--此内存主要是被JVM存放Class与Meta信息
		--Class被加载loader时放入
		--和存放类实例(Instance)的Heap区域不同,
		--GC(Garbage Collection)不会在主程序运行期对PermGen space进行清理。
		--所以若是存在很多class就容易内存溢出

	--2.主要原因：
		--错误常见在web服务器对JSP进行pre compile的时候。
		--如果你的WEB APP下都用了大量的第三方jar, 其大小超过了jvm默认的大小(4M)那么就会产生此错误信息了。
	--3.解决方式：
		--手动设置MaxPermSize大小
		--修改TOMCAT_HOME/bin/catalina.sh
		--在# OS specific support. $var _must_ be set to either true or false.上面加入以下行：
		--JAVA_OPTS="-server -XX:PermSize=64M -XX:MaxPermSize=128M"
	--4.建议：
		--将相同的第三方jar文件移置到tomcat/shared/lib目录下，这样可以达到减少jar 文档重复占用内存的目的。


=======================================================
二、java.lang.OutOfMemoryError: Java heap space
Heap size 设置
JVM堆的设置是指java程序运行过程中JVM可以调配使用的内存空间的设置.JVM在启动的时候会自动设置Heap size的值，
其初始空间(即-Xms)是物理内存的1/64，最大空间(-Xmx)是物理内存的1/4。可以利用JVM提供的-Xmn -Xms -Xmx等选项可
进行设置。Heap size 的大小是Young Generation 和Tenured Generaion 之和。
提示：在JVM中如果98％的时间是用于GC且可用的Heap size 不足2％的时候将抛出此异常信息。
提示：Heap Size 最大不要超过可用物理内存的80％，一般的要将-Xms和-Xmx选项设置为相同，而-Xmn为1/4的-Xmx值。 
解决方法：手动设置Heap size
修改TOMCAT_HOME/bin/catalina.sh
在# OS specific support. $var _must_ be set to either true or false.上面加入以下行： 
JAVA_OPTS="-server -Xms800m -Xmx800m -XX:MaxNewSize=256m"

我直接处理方式是

JAVA_OPTS="-server -Xms256m -Xmx1024m -XX:MaxNewSize=256m -XX:PermSize=64M -XX:MaxPermSize=128M"