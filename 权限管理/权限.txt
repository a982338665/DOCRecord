-------------------------------------------------
RBAC(Role - Based Access Control)--基于角色的一种权限控制
权限与角色关联
用户和角色关联
----
用户-权限-菜单（最好的：集中权限认证）
----
技术栈：
·EasyUI1.3.2
·springmvc+FreeMarker(模板引擎)
·spring 4.0.5
·springjdbc
·mysql5.6

————————————————————————
实现：
·数据库设计
	用户--角色--功能（用户角色表--角色功能表）
·程序设计
	-1.包结构：controller，service,dao,dto（数据传输对象：controller和页面之间），entity,common,context
	-2.common包：tree(树形分装)，dao基类，实体基类，工具类
	-3.context:数据缓存(整个菜单等)，登陆用户信息（超时时间，访问权限等）
·权限接口设计
·代码实现
————————————————————————
权限与应用程序：
·应用url实现权限控制：
	--实现方式：判断url
	--应用范围：
		=web应用
		=rest接口：http协议post、get等
		=非rest接口
		
·应用code实现：例如apache shrio(权限开源项目)，spring security等
	--实现方式：
		=注解
		=编码
	--应用范围：
		=web应用：如各种管理系统
		=rest接口
		=非rest接口（RMI，Socket）
		=web服务（WebService接口）--apache中的shiro
·